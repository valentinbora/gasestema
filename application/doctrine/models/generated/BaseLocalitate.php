<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Localitate', 'doctrine');

/**
 * BaseLocalitate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property float $lat
 * @property float $long
 * @property Doctrine_Collection $Intrebare
 * @property Doctrine_Collection $Locatie
 * @property Doctrine_Collection $Obiect
 * @property Doctrine_Collection $User
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseLocalitate extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('localitate');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('lat', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '45',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('long', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '23',
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Intrebare', array(
             'local' => 'id',
             'foreign' => 'localitate'));

        $this->hasMany('Locatie', array(
             'local' => 'id',
             'foreign' => 'localitate'));

        $this->hasMany('Obiect', array(
             'local' => 'id',
             'foreign' => 'localitate'));

        $this->hasMany('User', array(
             'local' => 'id',
             'foreign' => 'localitate'));
    }
}